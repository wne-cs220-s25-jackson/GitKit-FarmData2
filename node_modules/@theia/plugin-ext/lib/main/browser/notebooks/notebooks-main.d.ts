/// <reference types="@theia/plugin/lib/theia.proposed.createFileSystemWatcher" />
/// <reference types="@theia/plugin/src/theia.proposed.debugVisualization" />
/// <reference types="@theia/plugin/lib/theia.proposed.multiDocumentHighlightProvider" />
/// <reference types="@theia/plugin/src/theia.proposed.notebookCellExecutionState" />
/// <reference types="@theia/plugin/src/theia.proposed.notebookKernelSource" />
/// <reference types="@theia/plugin/src/theia.proposed.notebookMessaging" />
/// <reference types="@theia/plugin/src/theia.proposed.portsAttributes" />
/// <reference types="@theia/plugin/src/theia.proposed.terminalCompletionProvider" />
/// <reference types="@theia/plugin/src/theia-extra" />
/// <reference types="@theia/plugin/src/theia.proposed.canonicalUriProvider" />
/// <reference types="@theia/plugin/src/theia.proposed.customEditorMove" />
/// <reference types="@theia/plugin/src/theia.proposed.diffCommand" />
/// <reference types="@theia/plugin/src/theia.proposed.documentPaste" />
/// <reference types="@theia/plugin/src/theia.proposed.editSessionIdentityProvider" />
/// <reference types="@theia/plugin/src/theia.proposed.extensionsAny" />
/// <reference types="@theia/plugin/src/theia.proposed.externalUriOpener" />
/// <reference types="@theia/plugin/src/theia.proposed.findTextInFiles" />
/// <reference types="@theia/plugin/src/theia.proposed.fsChunks" />
/// <reference types="@theia/plugin/src/theia.proposed.mappedEditsProvider" />
/// <reference types="@theia/plugin/src/theia.proposed.profileContentHandlers" />
/// <reference types="@theia/plugin/src/theia.proposed.resolvers" />
/// <reference types="@theia/plugin/src/theia.proposed.scmValidation" />
/// <reference types="@theia/plugin/src/theia.proposed.shareProvider" />
/// <reference types="@theia/plugin/src/theia.proposed.terminalQuickFixProvider" />
/// <reference types="@theia/plugin/src/theia.proposed.textSearchProvider" />
/// <reference types="@theia/plugin/src/theia.proposed.timeline" />
import { DisposableCollection } from '@theia/core';
import { TransientOptions } from '@theia/notebook/lib/common';
import { NotebookService, NotebookWorkspaceEdit } from '@theia/notebook/lib/browser';
import { Disposable } from '@theia/plugin';
import { CommandRegistryMain, NotebooksExt, NotebooksMain, WorkspaceEditDto } from '../../../common';
import { RPCProtocol } from '../../../common/rpc-protocol';
import { interfaces } from '@theia/core/shared/inversify';
import { NotebookCellStatusBarService } from '@theia/notebook/lib/browser/service/notebook-cell-status-bar-service';
export declare class NotebooksMainImpl implements NotebooksMain {
    protected readonly disposables: DisposableCollection;
    protected notebookService: NotebookService;
    protected cellStatusBarService: NotebookCellStatusBarService;
    protected readonly proxy: NotebooksExt;
    protected readonly notebookSerializer: Map<number, Disposable>;
    protected readonly notebookCellStatusBarRegistrations: Map<number, Disposable>;
    constructor(rpc: RPCProtocol, container: interfaces.Container, commands: CommandRegistryMain);
    dispose(): void;
    $registerNotebookSerializer(handle: number, viewType: string, options: TransientOptions): void;
    $unregisterNotebookSerializer(handle: number): void;
    $emitCellStatusBarEvent(eventHandle: number): void;
    $registerNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined, viewType: string): Promise<void>;
    $unregisterNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined): Promise<void>;
}
export declare function toNotebookWorspaceEdit(dto: WorkspaceEditDto): NotebookWorkspaceEdit;
//# sourceMappingURL=notebooks-main.d.ts.map