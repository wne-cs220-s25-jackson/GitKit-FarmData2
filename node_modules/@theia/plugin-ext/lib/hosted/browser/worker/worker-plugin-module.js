"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// *****************************************************************************
// Copyright (C) 2024 EclipseSource and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
// eslint-disable-next-line import/no-extraneous-dependencies
require("reflect-metadata");
const inversify_1 = require("@theia/core/shared/inversify");
const channel_1 = require("@theia/core/lib/common/message-rpc/channel");
const uint8_array_message_buffer_1 = require("@theia/core/lib/common/message-rpc/uint8-array-message-buffer");
const plugin_api_rpc_1 = require("../../../common/plugin-api-rpc");
const rpc_protocol_1 = require("../../../common/rpc-protocol");
const clipboard_ext_1 = require("../../../plugin/clipboard-ext");
const editors_and_documents_1 = require("../../../plugin/editors-and-documents");
const message_registry_1 = require("../../../plugin/message-registry");
const plugin_manager_1 = require("../../../plugin/plugin-manager");
const plugin_storage_1 = require("../../../plugin/plugin-storage");
const preference_registry_1 = require("../../../plugin/preference-registry");
const secrets_ext_1 = require("../../../plugin/secrets-ext");
const terminal_ext_1 = require("../../../plugin/terminal-ext");
const webviews_1 = require("../../../plugin/webviews");
const workspace_1 = require("../../../plugin/workspace");
const debug_stub_1 = require("./debug-stub");
const env_1 = require("../../../plugin/env");
const worker_env_ext_1 = require("./worker-env-ext");
const debug_ext_1 = require("../../../plugin/debug/debug-ext");
const localization_ext_1 = require("../../../plugin/localization-ext");
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const ctx = self;
exports.default = new inversify_1.ContainerModule(bind => {
    const channel = new channel_1.BasicChannel(() => {
        const writeBuffer = new uint8_array_message_buffer_1.Uint8ArrayWriteBuffer();
        writeBuffer.onCommit(buffer => {
            ctx.postMessage(buffer);
        });
        return writeBuffer;
    });
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    addEventListener('message', (message) => {
        channel.onMessageEmitter.fire(() => new uint8_array_message_buffer_1.Uint8ArrayReadBuffer(message.data));
    });
    const rpc = new rpc_protocol_1.RPCProtocolImpl(channel);
    bind(rpc_protocol_1.RPCProtocol).toConstantValue(rpc);
    bind(plugin_manager_1.PluginManagerExtImpl).toSelf().inSingletonScope();
    bind(env_1.EnvExtImpl).to(worker_env_ext_1.WorkerEnvExtImpl).inSingletonScope();
    bind(localization_ext_1.LocalizationExtImpl).toSelf().inSingletonScope();
    bind(plugin_api_rpc_1.LocalizationExt).toService(localization_ext_1.LocalizationExtImpl);
    bind(plugin_storage_1.KeyValueStorageProxy).toSelf().inSingletonScope();
    bind(plugin_storage_1.InternalStorageExt).toService(plugin_storage_1.KeyValueStorageProxy);
    bind(secrets_ext_1.SecretsExtImpl).toSelf().inSingletonScope();
    bind(secrets_ext_1.InternalSecretsExt).toService(secrets_ext_1.SecretsExtImpl);
    bind(preference_registry_1.PreferenceRegistryExtImpl).toSelf().inSingletonScope();
    bind(debug_ext_1.DebugExtImpl).toDynamicValue(({ container }) => {
        const child = container.createChild();
        child.bind(debug_ext_1.DebugExtImpl).toSelf();
        return (0, debug_stub_1.createDebugExtStub)(child);
    }).inSingletonScope();
    bind(editors_and_documents_1.EditorsAndDocumentsExtImpl).toSelf().inSingletonScope();
    bind(workspace_1.WorkspaceExtImpl).toSelf().inSingletonScope();
    bind(message_registry_1.MessageRegistryExt).toSelf().inSingletonScope();
    bind(clipboard_ext_1.ClipboardExt).toSelf().inSingletonScope();
    bind(webviews_1.WebviewsExtImpl).toSelf().inSingletonScope();
    bind(terminal_ext_1.TerminalServiceExtImpl).toSelf().inSingletonScope();
    bind(plugin_manager_1.MinimalTerminalServiceExt).toService(terminal_ext_1.TerminalServiceExtImpl);
});
//# sourceMappingURL=worker-plugin-module.js.map