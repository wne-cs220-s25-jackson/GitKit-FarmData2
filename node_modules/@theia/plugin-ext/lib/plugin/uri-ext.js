"use strict";
// *****************************************************************************
// Copyright (C) 2024 STMicroelectronics.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", { value: true });
exports.UriExtImpl = void 0;
const plugin_api_rpc_1 = require("../common/plugin-api-rpc");
const types_impl_1 = require("./types-impl");
class UriExtImpl {
    constructor(rpc) {
        this.rpc = rpc;
        this.handlers = new Map();
        this.proxy = rpc.getProxy(plugin_api_rpc_1.PLUGIN_RPC_CONTEXT.URI_MAIN);
        console.log(this.proxy);
    }
    registerUriHandler(handler, plugin) {
        const pluginId = plugin.id;
        if (this.handlers.has(pluginId)) {
            throw new Error(`URI handler already registered for plugin ${pluginId}`);
        }
        this.handlers.set(pluginId, handler);
        this.proxy.$registerUriHandler(pluginId, plugin.displayName || plugin.name);
        return new types_impl_1.Disposable(() => {
            this.proxy.$unregisterUriHandler(pluginId);
            this.handlers.delete(pluginId);
        });
    }
    $handleExternalUri(uri) {
        const handler = this.handlers.get(uri.authority);
        if (!handler) {
            return Promise.resolve();
        }
        handler.handleUri(types_impl_1.URI.revive(uri));
        return Promise.resolve();
    }
}
exports.UriExtImpl = UriExtImpl;
//# sourceMappingURL=uri-ext.js.map