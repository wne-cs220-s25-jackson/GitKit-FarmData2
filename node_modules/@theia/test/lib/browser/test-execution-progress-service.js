"use strict";
// *****************************************************************************
// Copyright (C) 2024 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultTestExecutionProgressService = exports.TestExecutionProgressService = void 0;
const tslib_1 = require("tslib");
const inversify_1 = require("@theia/core/shared/inversify");
const test_result_view_contribution_1 = require("./view/test-result-view-contribution");
const test_view_contribution_1 = require("./view/test-view-contribution");
const test_preferences_1 = require("./test-preferences");
exports.TestExecutionProgressService = Symbol('TestExecutionProgressService');
let DefaultTestExecutionProgressService = class DefaultTestExecutionProgressService {
    async onTestRunRequested(preserveFocus) {
        if (!preserveFocus) {
            const openTesting = this.testPreferences['testing.openTesting'];
            if (openTesting === 'openOnTestStart') {
                this.openTestResultView();
            }
        }
    }
    async openTestResultView() {
        return this.testResultView.openView({ activate: true });
    }
};
exports.DefaultTestExecutionProgressService = DefaultTestExecutionProgressService;
tslib_1.__decorate([
    (0, inversify_1.inject)(test_result_view_contribution_1.TestResultViewContribution),
    tslib_1.__metadata("design:type", test_result_view_contribution_1.TestResultViewContribution)
], DefaultTestExecutionProgressService.prototype, "testResultView", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(test_view_contribution_1.TestViewContribution),
    tslib_1.__metadata("design:type", test_view_contribution_1.TestViewContribution)
], DefaultTestExecutionProgressService.prototype, "testView", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(test_preferences_1.TestPreferences),
    tslib_1.__metadata("design:type", Object)
], DefaultTestExecutionProgressService.prototype, "testPreferences", void 0);
exports.DefaultTestExecutionProgressService = DefaultTestExecutionProgressService = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], DefaultTestExecutionProgressService);
//# sourceMappingURL=test-execution-progress-service.js.map