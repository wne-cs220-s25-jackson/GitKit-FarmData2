"use strict";
// *****************************************************************************
// Copyright (C) 2024 Typefox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreferenceFrontendContribution = void 0;
const tslib_1 = require("tslib");
const inversify_1 = require("@theia/core/shared/inversify");
const cli_preferences_1 = require("../common/cli-preferences");
const preference_service_1 = require("@theia/core/lib/browser/preferences/preference-service");
let PreferenceFrontendContribution = class PreferenceFrontendContribution {
    onStart() {
        this.CliPreferences.getPreferences().then(async (preferences) => {
            await this.preferenceService.ready;
            for (const [key, value] of preferences) {
                this.preferenceService.set(key, value, preference_service_1.PreferenceScope.User);
            }
        });
    }
};
exports.PreferenceFrontendContribution = PreferenceFrontendContribution;
tslib_1.__decorate([
    (0, inversify_1.inject)(cli_preferences_1.CliPreferences),
    tslib_1.__metadata("design:type", Object)
], PreferenceFrontendContribution.prototype, "CliPreferences", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(preference_service_1.PreferenceService),
    tslib_1.__metadata("design:type", Object)
], PreferenceFrontendContribution.prototype, "preferenceService", void 0);
exports.PreferenceFrontendContribution = PreferenceFrontendContribution = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], PreferenceFrontendContribution);
//# sourceMappingURL=preference-frontend-contribution.js.map