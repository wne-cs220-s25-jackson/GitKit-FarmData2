"use strict";
// *****************************************************************************
// Copyright (C) 2018 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultGitEnvProvider = exports.GitEnvProvider = void 0;
const tslib_1 = require("tslib");
const inversify_1 = require("@theia/core/shared/inversify");
const disposable_1 = require("@theia/core/lib/common/disposable");
/**
 * Provides an additional environment object when executing every single Git command.
 */
exports.GitEnvProvider = Symbol('GitEnvProvider');
/**
 * The default Git environment provider. Does nothing.
 */
let DefaultGitEnvProvider = class DefaultGitEnvProvider {
    constructor() {
        this.toDispose = new disposable_1.DisposableCollection();
    }
    init() {
        // NOOP
    }
    async getEnv() {
        return {};
    }
    dispose() {
        if (!this.toDispose.disposed) {
            this.toDispose.dispose();
        }
    }
};
exports.DefaultGitEnvProvider = DefaultGitEnvProvider;
tslib_1.__decorate([
    (0, inversify_1.postConstruct)(),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], DefaultGitEnvProvider.prototype, "init", null);
exports.DefaultGitEnvProvider = DefaultGitEnvProvider = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], DefaultGitEnvProvider);
//# sourceMappingURL=git-env-provider.js.map