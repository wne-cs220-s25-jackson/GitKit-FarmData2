import { PreferenceService } from '@theia/core/lib/browser';
import { Emitter } from '@theia/core';
import { EditorPreferences } from '@theia/editor/lib/browser';
import { BareFontInfo } from '@theia/monaco-editor-core/esm/vs/editor/common/config/fontInfo';
export interface NotebookOutputOptions {
    readonly outputNodeLeftPadding: number;
    readonly fontSize: number;
    readonly outputFontSize?: number;
    readonly fontFamily: string;
    readonly outputFontFamily?: string;
    readonly outputLineHeight: number;
    readonly outputScrolling: boolean;
    readonly outputWordWrap: boolean;
    readonly outputLineLimit: number;
}
export declare class NotebookOptionsService {
    protected readonly preferenceService: PreferenceService;
    protected readonly editorPreferences: EditorPreferences;
    protected outputOptionsChangedEmitter: Emitter<NotebookOutputOptions>;
    onDidChangeOutputOptions: import("@theia/core").Event<NotebookOutputOptions>;
    protected fontInfo?: BareFontInfo;
    get editorFontInfo(): BareFontInfo;
    protected init(): void;
    computeOutputOptions(): NotebookOutputOptions;
    protected getNotebookPreferenceWithDefault<T>(key: string): T;
    protected computeOutputLineHeight(lineHeight: number, outputFontSize: number): number;
    protected getOrCreateMonacoFontInfo(): BareFontInfo;
    protected createFontInfo(): BareFontInfo;
}
//# sourceMappingURL=notebook-options.d.ts.map