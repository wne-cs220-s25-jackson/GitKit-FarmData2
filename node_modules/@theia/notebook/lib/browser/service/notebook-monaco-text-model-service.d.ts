import { ReferenceCollection, URI, Reference, Event } from '@theia/core';
import { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';
import { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';
import { NotebookModel } from '../view-model/notebook-model';
/**
 * special service for creating monaco textmodels for notebook cells.
 * Its for optimization purposes since there is alot of overhead otherwise with calling the backend to create a document for each cell and other smaller things.
 */
export declare class NotebookMonacoTextModelService {
    protected readonly monacoTextModelService: MonacoTextModelService;
    protected readonly cellmodels: ReferenceCollection<string, MonacoEditorModel>;
    getOrCreateNotebookCellModelReference(uri: URI): Promise<Reference<MonacoEditorModel>>;
    createTextModelsForNotebook(notebook: NotebookModel): Promise<void>;
    get onDidCreateNotebookCellModel(): Event<MonacoEditorModel>;
}
//# sourceMappingURL=notebook-monaco-text-model-service.d.ts.map