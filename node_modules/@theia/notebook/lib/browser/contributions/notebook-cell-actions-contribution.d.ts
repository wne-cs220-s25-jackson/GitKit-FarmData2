import { Command, CommandContribution, CommandHandler, CommandRegistry, MenuContribution, MenuModelRegistry } from '@theia/core';
import { KeybindingContribution, KeybindingRegistry } from '@theia/core/lib/browser';
import { NotebookModel } from '../view-model/notebook-model';
import { NotebookCellModel } from '../view-model/notebook-cell-model';
import { ContextKeyService } from '@theia/core/lib/browser/context-key-service';
import { NotebookExecutionService } from '../service/notebook-execution-service';
import { NotebookCellOutputModel } from '../view-model/notebook-cell-output-model';
import { NotebookEditorWidgetService } from '../service/notebook-editor-widget-service';
import { EditorLanguageQuickPickService } from '@theia/editor/lib/browser/editor-language-quick-pick-service';
import { NotebookService } from '../service/notebook-service';
export declare namespace NotebookCellCommands {
    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel */
    const EDIT_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel */
    const STOP_EDIT_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */
    const DELETE_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */
    const SPLIT_CELL_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */
    const EXECUTE_SINGLE_CELL_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */
    const EXECUTE_SINGLE_CELL_AND_FOCUS_NEXT_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */
    const EXECUTE_SINGLE_CELL_AND_INSERT_BELOW_COMMAND: Command;
    const EXECUTE_ABOVE_CELLS_COMMAND: Command;
    const EXECUTE_CELL_AND_BELOW_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */
    const STOP_CELL_EXECUTION_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel */
    const CLEAR_OUTPUTS_COMMAND: Command;
    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel | undefined, output: NotebookCellOutputModel */
    const CHANGE_OUTPUT_PRESENTATION_COMMAND: Command;
    const INSERT_NEW_CELL_ABOVE_COMMAND: Command;
    const INSERT_NEW_CELL_BELOW_COMMAND: Command;
    const INSERT_MARKDOWN_CELL_ABOVE_COMMAND: Command;
    const INSERT_MARKDOWN_CELL_BELOW_COMMAND: Command;
    const TO_CODE_CELL_COMMAND: Command;
    const TO_MARKDOWN_CELL_COMMAND: Command;
    const TOGGLE_CELL_OUTPUT: Command;
    const CHANGE_CELL_LANGUAGE: Command;
    const TOGGLE_LINE_NUMBERS: Command;
}
export declare class NotebookCellActionContribution implements MenuContribution, CommandContribution, KeybindingContribution {
    protected contextKeyService: ContextKeyService;
    protected notebookService: NotebookService;
    protected notebookExecutionService: NotebookExecutionService;
    protected notebookEditorWidgetService: NotebookEditorWidgetService;
    protected languageQuickPickService: EditorLanguageQuickPickService;
    protected init(): void;
    registerMenus(menus: MenuModelRegistry): void;
    registerCommands(commands: CommandRegistry): void;
    protected editableCellCommandHandler(execute: (notebookModel: NotebookModel, cell: NotebookCellModel, output?: NotebookCellOutputModel) => void): CommandHandler;
    protected getSelectedCell(): NotebookCellModel | undefined;
    registerKeybindings(keybindings: KeybindingRegistry): void;
}
export declare namespace NotebookCellActionContribution {
    const ACTION_MENU: string[];
    const ADDITIONAL_ACTION_MENU: string[];
    const CONTRIBUTED_CELL_ACTION_MENU = "notebook/cell/title";
    const CONTRIBUTED_CELL_EXECUTION_MENU = "notebook/cell/execute";
    const CODE_CELL_SIDEBAR_MENU: string[];
    const OUTPUT_SIDEBAR_MENU: string[];
    const ADDITIONAL_OUTPUT_SIDEBAR_MENU: string[];
}
//# sourceMappingURL=notebook-cell-actions-contribution.d.ts.map