import { Disposable } from '@theia/core';
import { Emitter } from '@theia/core/shared/vscode-languageserver-protocol';
/**
 * this service is for managing the viewport and scroll state of a notebook editor.
 * its used both for restoring scroll state after reopening an editor and for cell to check if they are in the viewport.
 */
export declare class NotebookViewportService implements Disposable {
    protected onDidChangeViewportEmitter: Emitter<void>;
    readonly onDidChangeViewport: import("vscode-jsonrpc/lib/common/events").Event<void>;
    protected _viewportElement: HTMLDivElement | undefined;
    protected resizeObserver: ResizeObserver;
    set viewportElement(element: HTMLDivElement | undefined);
    isElementInViewport(element: HTMLElement): boolean;
    onScroll(e: HTMLDivElement): void;
    dispose(): void;
}
//# sourceMappingURL=notebook-viewport-service.d.ts.map