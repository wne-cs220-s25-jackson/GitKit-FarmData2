/// <reference types="react" />
import * as React from '@theia/core/shared/react';
import { NotebookModel } from '../view-model/notebook-model';
import { NotebookCellModel, NotebookCodeEditorFindMatch } from '../view-model/notebook-cell-model';
import { SimpleMonacoEditor } from '@theia/monaco/lib/browser/simple-monaco-editor';
import { MonacoEditorServices } from '@theia/monaco/lib/browser/monaco-editor';
import { NotebookContextManager } from '../service/notebook-context-manager';
import { DisposableCollection } from '@theia/core';
import { NotebookViewportService } from './notebook-viewport-service';
import { BareFontInfo } from '@theia/monaco-editor-core/esm/vs/editor/common/config/fontInfo';
import { ModelDecorationOptions } from '@theia/monaco-editor-core/esm/vs/editor/common/model/textModel';
import { NotebookCellEditorService } from '../service/notebook-cell-editor-service';
interface CellEditorProps {
    notebookModel: NotebookModel;
    cell: NotebookCellModel;
    monacoServices: MonacoEditorServices;
    notebookContextManager: NotebookContextManager;
    notebookCellEditorService: NotebookCellEditorService;
    notebookViewportService?: NotebookViewportService;
    fontInfo?: BareFontInfo;
}
export declare const CURRENT_FIND_MATCH_DECORATION: ModelDecorationOptions;
export declare const FIND_MATCH_DECORATION: ModelDecorationOptions;
export declare class CellEditor extends React.Component<CellEditorProps, {}> {
    protected editor?: SimpleMonacoEditor;
    protected toDispose: DisposableCollection;
    protected container?: HTMLDivElement;
    protected matches: NotebookCodeEditorFindMatch[];
    protected oldMatchDecorations: string[];
    componentDidMount(): void;
    componentWillUnmount(): void;
    protected disposeEditor(): void;
    protected centerEditorInView(): void;
    protected initEditor(): Promise<void>;
    protected setMatches(): void;
    protected setContainer(component: HTMLDivElement | null): void;
    protected handleResize: () => void;
    protected estimateHeight(): string;
    render(): React.ReactNode;
    protected blurEditor(): void;
}
export {};
//# sourceMappingURL=notebook-cell-editor.d.ts.map