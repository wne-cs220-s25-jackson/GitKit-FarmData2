/// <reference types="react" />
import * as React from '@theia/core/shared/react';
import { CellKind } from '../../common';
import { NotebookCellModel } from '../view-model/notebook-cell-model';
import { NotebookModel } from '../view-model/notebook-model';
import { NotebookCellToolbarFactory } from './notebook-cell-toolbar-factory';
import { CommandRegistry, DisposableCollection, MenuModelRegistry } from '@theia/core';
import { NotebookContextManager } from '../service/notebook-context-manager';
export interface CellRenderer {
    render(notebookData: NotebookModel, cell: NotebookCellModel, index: number): React.ReactNode;
    renderSidebar(notebookModel: NotebookModel, cell: NotebookCellModel): React.ReactNode;
    renderDragImage(cell: NotebookCellModel): HTMLElement;
}
export declare function observeCellHeight(ref: HTMLDivElement | null, cell: NotebookCellModel): void;
interface CellListProps {
    renderers: Map<CellKind, CellRenderer>;
    notebookModel: NotebookModel;
    notebookContext: NotebookContextManager;
    toolbarRenderer: NotebookCellToolbarFactory;
    commandRegistry: CommandRegistry;
    menuRegistry: MenuModelRegistry;
}
interface NotebookCellListState {
    selectedCell?: NotebookCellModel;
    scrollIntoView: boolean;
    dragOverIndicator: {
        cell: NotebookCellModel;
        position: 'top' | 'bottom';
    } | undefined;
}
export declare class NotebookCellListView extends React.Component<CellListProps, NotebookCellListState> {
    protected toDispose: DisposableCollection;
    protected static dragGhost: HTMLElement | undefined;
    protected cellListRef: React.RefObject<HTMLUListElement>;
    constructor(props: CellListProps);
    componentWillUnmount(): void;
    render(): React.ReactNode;
    renderCellContent(cell: NotebookCellModel, index: number): React.ReactNode;
    renderCellSidebar(cell: NotebookCellModel): React.ReactNode;
    protected onDragStart(event: React.DragEvent<HTMLElement>): void;
    protected onDragOver(event: React.DragEvent<HTMLLIElement>, cell: NotebookCellModel, position?: 'top' | 'bottom'): void;
    protected isEnabled(): boolean;
    protected onDrop(event: React.DragEvent<HTMLLIElement>, dropElementIndex: number): void;
    protected onAddNewCell(commandId: string, index: number): void;
    protected shouldRenderDragOverIndicator(cell: NotebookCellModel, position: 'top' | 'bottom'): boolean;
}
export interface NotebookCellDividerProps {
    isVisible: () => boolean;
    onAddNewCell: (commandId: string) => void;
    onDrop: (event: React.DragEvent<HTMLLIElement>) => void;
    onDragOver: (event: React.DragEvent<HTMLLIElement>) => void;
    menuRegistry: MenuModelRegistry;
}
export declare function NotebookCellDivider({ isVisible, onAddNewCell, onDrop, onDragOver, menuRegistry }: NotebookCellDividerProps): React.JSX.Element;
export {};
//# sourceMappingURL=notebook-cell-list-view.d.ts.map