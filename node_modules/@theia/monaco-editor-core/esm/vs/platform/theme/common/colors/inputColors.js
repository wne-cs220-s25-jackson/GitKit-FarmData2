"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.keybindingLabelBottomBorder = exports.keybindingLabelBorder = exports.keybindingLabelForeground = exports.keybindingLabelBackground = exports.checkboxSelectBorder = exports.checkboxBorder = exports.checkboxForeground = exports.checkboxSelectBackground = exports.checkboxBackground = exports.radioInactiveHoverBackground = exports.radioInactiveBorder = exports.radioInactiveBackground = exports.radioInactiveForeground = exports.radioActiveBorder = exports.radioActiveBackground = exports.radioActiveForeground = exports.buttonSecondaryHoverBackground = exports.buttonSecondaryBackground = exports.buttonSecondaryForeground = exports.buttonBorder = exports.buttonHoverBackground = exports.buttonBackground = exports.buttonSeparator = exports.buttonForeground = exports.selectBorder = exports.selectForeground = exports.selectListBackground = exports.selectBackground = exports.inputValidationErrorBorder = exports.inputValidationErrorForeground = exports.inputValidationErrorBackground = exports.inputValidationWarningBorder = exports.inputValidationWarningForeground = exports.inputValidationWarningBackground = exports.inputValidationInfoBorder = exports.inputValidationInfoForeground = exports.inputValidationInfoBackground = exports.inputPlaceholderForeground = exports.inputActiveOptionForeground = exports.inputActiveOptionBackground = exports.inputActiveOptionHoverBackground = exports.inputActiveOptionBorder = exports.inputBorder = exports.inputForeground = exports.inputBackground = void 0;
const nls = require("../../../../nls.js");
// Import the effects we need
const color_js_1 = require("../../../../base/common/color.js");
const colorUtils_js_1 = require("../colorUtils.js");
// Import the colors we need
const baseColors_js_1 = require("./baseColors.js");
const editorColors_js_1 = require("./editorColors.js");
// ----- input
exports.inputBackground = (0, colorUtils_js_1.registerColor)('input.background', { dark: '#3C3C3C', light: color_js_1.Color.white, hcDark: color_js_1.Color.black, hcLight: color_js_1.Color.white }, nls.localize('inputBoxBackground', "Input box background."));
exports.inputForeground = (0, colorUtils_js_1.registerColor)('input.foreground', baseColors_js_1.foreground, nls.localize('inputBoxForeground', "Input box foreground."));
exports.inputBorder = (0, colorUtils_js_1.registerColor)('input.border', { dark: null, light: null, hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('inputBoxBorder', "Input box border."));
exports.inputActiveOptionBorder = (0, colorUtils_js_1.registerColor)('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('inputBoxActiveOptionBorder', "Border color of activated options in input fields."));
exports.inputActiveOptionHoverBackground = (0, colorUtils_js_1.registerColor)('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', "Background color of activated options in input fields."));
exports.inputActiveOptionBackground = (0, colorUtils_js_1.registerColor)('inputOption.activeBackground', { dark: (0, colorUtils_js_1.transparent)(baseColors_js_1.focusBorder, 0.4), light: (0, colorUtils_js_1.transparent)(baseColors_js_1.focusBorder, 0.2), hcDark: color_js_1.Color.transparent, hcLight: color_js_1.Color.transparent }, nls.localize('inputOption.activeBackground', "Background hover color of options in input fields."));
exports.inputActiveOptionForeground = (0, colorUtils_js_1.registerColor)('inputOption.activeForeground', { dark: color_js_1.Color.white, light: color_js_1.Color.black, hcDark: baseColors_js_1.foreground, hcLight: baseColors_js_1.foreground }, nls.localize('inputOption.activeForeground', "Foreground color of activated options in input fields."));
exports.inputPlaceholderForeground = (0, colorUtils_js_1.registerColor)('input.placeholderForeground', { light: (0, colorUtils_js_1.transparent)(baseColors_js_1.foreground, 0.5), dark: (0, colorUtils_js_1.transparent)(baseColors_js_1.foreground, 0.5), hcDark: (0, colorUtils_js_1.transparent)(baseColors_js_1.foreground, 0.7), hcLight: (0, colorUtils_js_1.transparent)(baseColors_js_1.foreground, 0.7) }, nls.localize('inputPlaceholderForeground', "Input box foreground color for placeholder text."));
// ----- input validation
exports.inputValidationInfoBackground = (0, colorUtils_js_1.registerColor)('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: color_js_1.Color.black, hcLight: color_js_1.Color.white }, nls.localize('inputValidationInfoBackground', "Input validation background color for information severity."));
exports.inputValidationInfoForeground = (0, colorUtils_js_1.registerColor)('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: baseColors_js_1.foreground }, nls.localize('inputValidationInfoForeground', "Input validation foreground color for information severity."));
exports.inputValidationInfoBorder = (0, colorUtils_js_1.registerColor)('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('inputValidationInfoBorder', "Input validation border color for information severity."));
exports.inputValidationWarningBackground = (0, colorUtils_js_1.registerColor)('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: color_js_1.Color.black, hcLight: color_js_1.Color.white }, nls.localize('inputValidationWarningBackground', "Input validation background color for warning severity."));
exports.inputValidationWarningForeground = (0, colorUtils_js_1.registerColor)('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: baseColors_js_1.foreground }, nls.localize('inputValidationWarningForeground', "Input validation foreground color for warning severity."));
exports.inputValidationWarningBorder = (0, colorUtils_js_1.registerColor)('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('inputValidationWarningBorder', "Input validation border color for warning severity."));
exports.inputValidationErrorBackground = (0, colorUtils_js_1.registerColor)('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: color_js_1.Color.black, hcLight: color_js_1.Color.white }, nls.localize('inputValidationErrorBackground', "Input validation background color for error severity."));
exports.inputValidationErrorForeground = (0, colorUtils_js_1.registerColor)('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: baseColors_js_1.foreground }, nls.localize('inputValidationErrorForeground', "Input validation foreground color for error severity."));
exports.inputValidationErrorBorder = (0, colorUtils_js_1.registerColor)('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('inputValidationErrorBorder', "Input validation border color for error severity."));
// ----- select
exports.selectBackground = (0, colorUtils_js_1.registerColor)('dropdown.background', { dark: '#3C3C3C', light: color_js_1.Color.white, hcDark: color_js_1.Color.black, hcLight: color_js_1.Color.white }, nls.localize('dropdownBackground', "Dropdown background."));
exports.selectListBackground = (0, colorUtils_js_1.registerColor)('dropdown.listBackground', { dark: null, light: null, hcDark: color_js_1.Color.black, hcLight: color_js_1.Color.white }, nls.localize('dropdownListBackground', "Dropdown list background."));
exports.selectForeground = (0, colorUtils_js_1.registerColor)('dropdown.foreground', { dark: '#F0F0F0', light: baseColors_js_1.foreground, hcDark: color_js_1.Color.white, hcLight: baseColors_js_1.foreground }, nls.localize('dropdownForeground', "Dropdown foreground."));
exports.selectBorder = (0, colorUtils_js_1.registerColor)('dropdown.border', { dark: exports.selectBackground, light: '#CECECE', hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('dropdownBorder', "Dropdown border."));
// ------ button
exports.buttonForeground = (0, colorUtils_js_1.registerColor)('button.foreground', color_js_1.Color.white, nls.localize('buttonForeground', "Button foreground color."));
exports.buttonSeparator = (0, colorUtils_js_1.registerColor)('button.separator', (0, colorUtils_js_1.transparent)(exports.buttonForeground, .4), nls.localize('buttonSeparator', "Button separator color."));
exports.buttonBackground = (0, colorUtils_js_1.registerColor)('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', "Button background color."));
exports.buttonHoverBackground = (0, colorUtils_js_1.registerColor)('button.hoverBackground', { dark: (0, colorUtils_js_1.lighten)(exports.buttonBackground, 0.2), light: (0, colorUtils_js_1.darken)(exports.buttonBackground, 0.2), hcDark: exports.buttonBackground, hcLight: exports.buttonBackground }, nls.localize('buttonHoverBackground', "Button background color when hovering."));
exports.buttonBorder = (0, colorUtils_js_1.registerColor)('button.border', baseColors_js_1.contrastBorder, nls.localize('buttonBorder', "Button border color."));
exports.buttonSecondaryForeground = (0, colorUtils_js_1.registerColor)('button.secondaryForeground', { dark: color_js_1.Color.white, light: color_js_1.Color.white, hcDark: color_js_1.Color.white, hcLight: baseColors_js_1.foreground }, nls.localize('buttonSecondaryForeground', "Secondary button foreground color."));
exports.buttonSecondaryBackground = (0, colorUtils_js_1.registerColor)('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: color_js_1.Color.white }, nls.localize('buttonSecondaryBackground', "Secondary button background color."));
exports.buttonSecondaryHoverBackground = (0, colorUtils_js_1.registerColor)('button.secondaryHoverBackground', { dark: (0, colorUtils_js_1.lighten)(exports.buttonSecondaryBackground, 0.2), light: (0, colorUtils_js_1.darken)(exports.buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', "Secondary button background color when hovering."));
// ------ radio
exports.radioActiveForeground = (0, colorUtils_js_1.registerColor)('radio.activeForeground', exports.inputActiveOptionForeground, nls.localize('radioActiveForeground', "Foreground color of active radio option."));
exports.radioActiveBackground = (0, colorUtils_js_1.registerColor)('radio.activeBackground', exports.inputActiveOptionBackground, nls.localize('radioBackground', "Background color of active radio option."));
exports.radioActiveBorder = (0, colorUtils_js_1.registerColor)('radio.activeBorder', exports.inputActiveOptionBorder, nls.localize('radioActiveBorder', "Border color of the active radio option."));
exports.radioInactiveForeground = (0, colorUtils_js_1.registerColor)('radio.inactiveForeground', null, nls.localize('radioInactiveForeground', "Foreground color of inactive radio option."));
exports.radioInactiveBackground = (0, colorUtils_js_1.registerColor)('radio.inactiveBackground', null, nls.localize('radioInactiveBackground', "Background color of inactive radio option."));
exports.radioInactiveBorder = (0, colorUtils_js_1.registerColor)('radio.inactiveBorder', { light: (0, colorUtils_js_1.transparent)(exports.radioActiveForeground, .2), dark: (0, colorUtils_js_1.transparent)(exports.radioActiveForeground, .2), hcDark: (0, colorUtils_js_1.transparent)(exports.radioActiveForeground, .4), hcLight: (0, colorUtils_js_1.transparent)(exports.radioActiveForeground, .2) }, nls.localize('radioInactiveBorder', "Border color of the inactive radio option."));
exports.radioInactiveHoverBackground = (0, colorUtils_js_1.registerColor)('radio.inactiveHoverBackground', exports.inputActiveOptionHoverBackground, nls.localize('radioHoverBackground', "Background color of inactive active radio option when hovering."));
// ------ checkbox
exports.checkboxBackground = (0, colorUtils_js_1.registerColor)('checkbox.background', exports.selectBackground, nls.localize('checkbox.background', "Background color of checkbox widget."));
exports.checkboxSelectBackground = (0, colorUtils_js_1.registerColor)('checkbox.selectBackground', editorColors_js_1.editorWidgetBackground, nls.localize('checkbox.select.background', "Background color of checkbox widget when the element it's in is selected."));
exports.checkboxForeground = (0, colorUtils_js_1.registerColor)('checkbox.foreground', exports.selectForeground, nls.localize('checkbox.foreground', "Foreground color of checkbox widget."));
exports.checkboxBorder = (0, colorUtils_js_1.registerColor)('checkbox.border', exports.selectBorder, nls.localize('checkbox.border', "Border color of checkbox widget."));
exports.checkboxSelectBorder = (0, colorUtils_js_1.registerColor)('checkbox.selectBorder', baseColors_js_1.iconForeground, nls.localize('checkbox.select.border', "Border color of checkbox widget when the element it's in is selected."));
// ------ keybinding label
exports.keybindingLabelBackground = (0, colorUtils_js_1.registerColor)('keybindingLabel.background', { dark: new color_js_1.Color(new color_js_1.RGBA(128, 128, 128, 0.17)), light: new color_js_1.Color(new color_js_1.RGBA(221, 221, 221, 0.4)), hcDark: color_js_1.Color.transparent, hcLight: color_js_1.Color.transparent }, nls.localize('keybindingLabelBackground', "Keybinding label background color. The keybinding label is used to represent a keyboard shortcut."));
exports.keybindingLabelForeground = (0, colorUtils_js_1.registerColor)('keybindingLabel.foreground', { dark: color_js_1.Color.fromHex('#CCCCCC'), light: color_js_1.Color.fromHex('#555555'), hcDark: color_js_1.Color.white, hcLight: baseColors_js_1.foreground }, nls.localize('keybindingLabelForeground', "Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut."));
exports.keybindingLabelBorder = (0, colorUtils_js_1.registerColor)('keybindingLabel.border', { dark: new color_js_1.Color(new color_js_1.RGBA(51, 51, 51, 0.6)), light: new color_js_1.Color(new color_js_1.RGBA(204, 204, 204, 0.4)), hcDark: new color_js_1.Color(new color_js_1.RGBA(111, 195, 223)), hcLight: baseColors_js_1.contrastBorder }, nls.localize('keybindingLabelBorder', "Keybinding label border color. The keybinding label is used to represent a keyboard shortcut."));
exports.keybindingLabelBottomBorder = (0, colorUtils_js_1.registerColor)('keybindingLabel.bottomBorder', { dark: new color_js_1.Color(new color_js_1.RGBA(68, 68, 68, 0.6)), light: new color_js_1.Color(new color_js_1.RGBA(187, 187, 187, 0.4)), hcDark: new color_js_1.Color(new color_js_1.RGBA(111, 195, 223)), hcLight: baseColors_js_1.foreground }, nls.localize('keybindingLabelBottomBorder', "Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut."));
//# sourceMappingURL=inputColors.js.map