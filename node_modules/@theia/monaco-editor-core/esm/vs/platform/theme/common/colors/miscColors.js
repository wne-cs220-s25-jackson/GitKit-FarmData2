"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.chartGuide = exports.chartAxis = exports.chartLine = exports.progressBarBackground = exports.scrollbarSliderActiveBackground = exports.scrollbarSliderHoverBackground = exports.scrollbarSliderBackground = exports.scrollbarShadow = exports.activityErrorBadgeBackground = exports.activityErrorBadgeForeground = exports.activityWarningBadgeBackground = exports.activityWarningBadgeForeground = exports.badgeForeground = exports.badgeBackground = exports.sashHoverBorder = void 0;
const nls = require("../../../../nls.js");
// Import the effects we need
const color_js_1 = require("../../../../base/common/color.js");
const colorUtils_js_1 = require("../colorUtils.js");
// Import the colors we need
const baseColors_js_1 = require("./baseColors.js");
// ----- sash
exports.sashHoverBorder = (0, colorUtils_js_1.registerColor)('sash.hoverBorder', baseColors_js_1.focusBorder, nls.localize('sashActiveBorder', "Border color of active sashes."));
// ----- badge
exports.badgeBackground = (0, colorUtils_js_1.registerColor)('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: color_js_1.Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', "Badge background color. Badges are small information labels, e.g. for search results count."));
exports.badgeForeground = (0, colorUtils_js_1.registerColor)('badge.foreground', { dark: color_js_1.Color.white, light: '#333', hcDark: color_js_1.Color.white, hcLight: color_js_1.Color.white }, nls.localize('badgeForeground', "Badge foreground color. Badges are small information labels, e.g. for search results count."));
exports.activityWarningBadgeForeground = (0, colorUtils_js_1.registerColor)('activityWarningBadge.foreground', { dark: color_js_1.Color.black.lighten(0.2), light: color_js_1.Color.white, hcDark: null, hcLight: color_js_1.Color.black.lighten(0.2) }, nls.localize('activityWarningBadge.foreground', 'Foreground color of the warning activity badge'));
exports.activityWarningBadgeBackground = (0, colorUtils_js_1.registerColor)('activityWarningBadge.background', { dark: '#CCA700', light: '#BF8803', hcDark: null, hcLight: '#CCA700' }, nls.localize('activityWarningBadge.background', 'Background color of the warning activity badge'));
exports.activityErrorBadgeForeground = (0, colorUtils_js_1.registerColor)('activityErrorBadge.foreground', { dark: color_js_1.Color.black.lighten(0.2), light: color_js_1.Color.white, hcDark: null, hcLight: color_js_1.Color.black.lighten(0.2) }, nls.localize('activityErrorBadge.foreground', 'Foreground color of the error activity badge'));
exports.activityErrorBadgeBackground = (0, colorUtils_js_1.registerColor)('activityErrorBadge.background', { dark: '#F14C4C', light: '#E51400', hcDark: null, hcLight: '#F14C4C' }, nls.localize('activityErrorBadge.background', 'Background color of the error activity badge'));
// ----- scrollbar
exports.scrollbarShadow = (0, colorUtils_js_1.registerColor)('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', "Scrollbar shadow to indicate that the view is scrolled."));
exports.scrollbarSliderBackground = (0, colorUtils_js_1.registerColor)('scrollbarSlider.background', { dark: color_js_1.Color.fromHex('#797979').transparent(0.4), light: color_js_1.Color.fromHex('#646464').transparent(0.4), hcDark: (0, colorUtils_js_1.transparent)(baseColors_js_1.contrastBorder, 0.6), hcLight: (0, colorUtils_js_1.transparent)(baseColors_js_1.contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', "Scrollbar slider background color."));
exports.scrollbarSliderHoverBackground = (0, colorUtils_js_1.registerColor)('scrollbarSlider.hoverBackground', { dark: color_js_1.Color.fromHex('#646464').transparent(0.7), light: color_js_1.Color.fromHex('#646464').transparent(0.7), hcDark: (0, colorUtils_js_1.transparent)(baseColors_js_1.contrastBorder, 0.8), hcLight: (0, colorUtils_js_1.transparent)(baseColors_js_1.contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', "Scrollbar slider background color when hovering."));
exports.scrollbarSliderActiveBackground = (0, colorUtils_js_1.registerColor)('scrollbarSlider.activeBackground', { dark: color_js_1.Color.fromHex('#BFBFBF').transparent(0.4), light: color_js_1.Color.fromHex('#000000').transparent(0.6), hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('scrollbarSliderActiveBackground', "Scrollbar slider background color when clicked on."));
// ----- progress bar
exports.progressBarBackground = (0, colorUtils_js_1.registerColor)('progressBar.background', { dark: color_js_1.Color.fromHex('#0E70C0'), light: color_js_1.Color.fromHex('#0E70C0'), hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('progressBarBackground', "Background color of the progress bar that can show for long running operations."));
// ----- chart
exports.chartLine = (0, colorUtils_js_1.registerColor)('chart.line', { dark: '#236B8E', light: '#236B8E', hcDark: '#236B8E', hcLight: '#236B8E' }, nls.localize('chartLine', "Line color for the chart."));
exports.chartAxis = (0, colorUtils_js_1.registerColor)('chart.axis', { dark: color_js_1.Color.fromHex('#BFBFBF').transparent(0.4), light: color_js_1.Color.fromHex('#000000').transparent(0.6), hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('chartAxis', "Axis color for the chart."));
exports.chartGuide = (0, colorUtils_js_1.registerColor)('chart.guide', { dark: color_js_1.Color.fromHex('#BFBFBF').transparent(0.2), light: color_js_1.Color.fromHex('#000000').transparent(0.2), hcDark: baseColors_js_1.contrastBorder, hcLight: baseColors_js_1.contrastBorder }, nls.localize('chartGuide', "Guide line for the chart."));
//# sourceMappingURL=miscColors.js.map