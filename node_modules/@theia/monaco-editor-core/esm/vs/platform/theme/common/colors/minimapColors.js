"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.minimapSliderActiveBackground = exports.minimapSliderHoverBackground = exports.minimapSliderBackground = exports.minimapForegroundOpacity = exports.minimapBackground = exports.minimapError = exports.minimapWarning = exports.minimapInfo = exports.minimapSelection = exports.minimapSelectionOccurrenceHighlight = exports.minimapFindMatch = void 0;
const nls = require("../../../../nls.js");
// Import the effects we need
const color_js_1 = require("../../../../base/common/color.js");
const colorUtils_js_1 = require("../colorUtils.js");
// Import the colors we need
const editorColors_js_1 = require("./editorColors.js");
const miscColors_js_1 = require("./miscColors.js");
exports.minimapFindMatch = (0, colorUtils_js_1.registerColor)('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);
exports.minimapSelectionOccurrenceHighlight = (0, colorUtils_js_1.registerColor)('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);
exports.minimapSelection = (0, colorUtils_js_1.registerColor)('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);
exports.minimapInfo = (0, colorUtils_js_1.registerColor)('minimap.infoHighlight', { dark: editorColors_js_1.editorInfoForeground, light: editorColors_js_1.editorInfoForeground, hcDark: editorColors_js_1.editorInfoBorder, hcLight: editorColors_js_1.editorInfoBorder }, nls.localize('minimapInfo', 'Minimap marker color for infos.'));
exports.minimapWarning = (0, colorUtils_js_1.registerColor)('minimap.warningHighlight', { dark: editorColors_js_1.editorWarningForeground, light: editorColors_js_1.editorWarningForeground, hcDark: editorColors_js_1.editorWarningBorder, hcLight: editorColors_js_1.editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));
exports.minimapError = (0, colorUtils_js_1.registerColor)('minimap.errorHighlight', { dark: new color_js_1.Color(new color_js_1.RGBA(255, 18, 18, 0.7)), light: new color_js_1.Color(new color_js_1.RGBA(255, 18, 18, 0.7)), hcDark: new color_js_1.Color(new color_js_1.RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));
exports.minimapBackground = (0, colorUtils_js_1.registerColor)('minimap.background', null, nls.localize('minimapBackground', "Minimap background color."));
exports.minimapForegroundOpacity = (0, colorUtils_js_1.registerColor)('minimap.foregroundOpacity', color_js_1.Color.fromHex('#000f'), nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.'));
exports.minimapSliderBackground = (0, colorUtils_js_1.registerColor)('minimapSlider.background', (0, colorUtils_js_1.transparent)(miscColors_js_1.scrollbarSliderBackground, 0.5), nls.localize('minimapSliderBackground', "Minimap slider background color."));
exports.minimapSliderHoverBackground = (0, colorUtils_js_1.registerColor)('minimapSlider.hoverBackground', (0, colorUtils_js_1.transparent)(miscColors_js_1.scrollbarSliderHoverBackground, 0.5), nls.localize('minimapSliderHoverBackground', "Minimap slider background color when hovering."));
exports.minimapSliderActiveBackground = (0, colorUtils_js_1.registerColor)('minimapSlider.activeBackground', (0, colorUtils_js_1.transparent)(miscColors_js_1.scrollbarSliderActiveBackground, 0.5), nls.localize('minimapSliderActiveBackground', "Minimap slider background color when clicked on."));
//# sourceMappingURL=minimapColors.js.map