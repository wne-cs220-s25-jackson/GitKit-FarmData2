"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.StandaloneTreeSitterParserService = void 0;
const event_js_1 = require("../../../base/common/event.js");
/**
 * The monaco build doesn't like the dynamic import of tree sitter in the real service.
 * We use a dummy sertive here to make the build happy.
 */
class StandaloneTreeSitterParserService {
    constructor() {
        this.onDidUpdateTree = event_js_1.Event.None;
        this.onDidAddLanguage = event_js_1.Event.None;
    }
    getTextModelTreeSitter(textModel) {
        return undefined;
    }
    async getTree(content, languageId) {
        return undefined;
    }
    getOrInitLanguage(_languageId) {
        return undefined;
    }
    getParseResult(textModel) {
        return undefined;
    }
}
exports.StandaloneTreeSitterParserService = StandaloneTreeSitterParserService;
//# sourceMappingURL=standaloneTreeSitterService.js.map