"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GotoLineAction = exports.StandaloneCommandsQuickAccessProvider = void 0;
const platform_js_1 = require("../../../../platform/registry/common/platform.js");
const quickAccess_js_1 = require("../../../../platform/quickinput/common/quickAccess.js");
const standaloneStrings_js_1 = require("../../../common/standaloneStrings.js");
const codeEditorService_js_1 = require("../../../browser/services/codeEditorService.js");
const commandsQuickAccess_js_1 = require("../../../contrib/quickAccess/browser/commandsQuickAccess.js");
const instantiation_js_1 = require("../../../../platform/instantiation/common/instantiation.js");
const keybinding_js_1 = require("../../../../platform/keybinding/common/keybinding.js");
const commands_js_1 = require("../../../../platform/commands/common/commands.js");
const telemetry_js_1 = require("../../../../platform/telemetry/common/telemetry.js");
const dialogs_js_1 = require("../../../../platform/dialogs/common/dialogs.js");
const editorExtensions_js_1 = require("../../../browser/editorExtensions.js");
const editorContextKeys_js_1 = require("../../../common/editorContextKeys.js");
const quickInput_js_1 = require("../../../../platform/quickinput/common/quickInput.js");
let StandaloneCommandsQuickAccessProvider = class StandaloneCommandsQuickAccessProvider extends commandsQuickAccess_js_1.AbstractEditorCommandsQuickAccessProvider {
    get activeTextEditorControl() { return this.codeEditorService.getFocusedCodeEditor() ?? undefined; }
    constructor(instantiationService, codeEditorService, keybindingService, commandService, telemetryService, dialogService) {
        super({ showAlias: false }, instantiationService, keybindingService, commandService, telemetryService, dialogService);
        this.codeEditorService = codeEditorService;
    }
    async getCommandPicks() {
        return this.getCodeEditorCommandPicks();
    }
    hasAdditionalCommandPicks() {
        return false;
    }
    async getAdditionalCommandPicks() {
        return [];
    }
};
exports.StandaloneCommandsQuickAccessProvider = StandaloneCommandsQuickAccessProvider;
exports.StandaloneCommandsQuickAccessProvider = StandaloneCommandsQuickAccessProvider = __decorate([
    __param(0, instantiation_js_1.IInstantiationService),
    __param(1, codeEditorService_js_1.ICodeEditorService),
    __param(2, keybinding_js_1.IKeybindingService),
    __param(3, commands_js_1.ICommandService),
    __param(4, telemetry_js_1.ITelemetryService),
    __param(5, dialogs_js_1.IDialogService)
], StandaloneCommandsQuickAccessProvider);
class GotoLineAction extends editorExtensions_js_1.EditorAction {
    static { this.ID = 'editor.action.quickCommand'; }
    constructor() {
        super({
            id: GotoLineAction.ID,
            label: standaloneStrings_js_1.QuickCommandNLS.quickCommandActionLabel,
            alias: 'Command Palette',
            precondition: undefined,
            kbOpts: {
                kbExpr: editorContextKeys_js_1.EditorContextKeys.focus,
                primary: 59 /* KeyCode.F1 */,
                weight: 100 /* KeybindingWeight.EditorContrib */
            },
            contextMenuOpts: {
                group: 'z_commands',
                order: 1
            }
        });
    }
    run(accessor) {
        accessor.get(quickInput_js_1.IQuickInputService).quickAccess.show(StandaloneCommandsQuickAccessProvider.PREFIX);
    }
}
exports.GotoLineAction = GotoLineAction;
(0, editorExtensions_js_1.registerEditorAction)(GotoLineAction);
platform_js_1.Registry.as(quickAccess_js_1.Extensions.Quickaccess).registerQuickAccessProvider({
    ctor: StandaloneCommandsQuickAccessProvider,
    prefix: StandaloneCommandsQuickAccessProvider.PREFIX,
    helpEntries: [{ description: standaloneStrings_js_1.QuickCommandNLS.quickCommandHelp, commandId: GotoLineAction.ID }]
});
//# sourceMappingURL=standaloneCommandsQuickAccess.js.map