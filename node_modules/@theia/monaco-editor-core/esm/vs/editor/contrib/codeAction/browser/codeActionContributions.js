"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const editorExtensions_js_1 = require("../../../browser/editorExtensions.js");
const editorConfigurationSchema_js_1 = require("../../../common/config/editorConfigurationSchema.js");
const codeActionCommands_js_1 = require("./codeActionCommands.js");
const codeActionController_js_1 = require("./codeActionController.js");
const lightBulbWidget_js_1 = require("./lightBulbWidget.js");
const nls = require("../../../../nls.js");
const configurationRegistry_js_1 = require("../../../../platform/configuration/common/configurationRegistry.js");
const platform_js_1 = require("../../../../platform/registry/common/platform.js");
(0, editorExtensions_js_1.registerEditorContribution)(codeActionController_js_1.CodeActionController.ID, codeActionController_js_1.CodeActionController, 3 /* EditorContributionInstantiation.Eventually */);
(0, editorExtensions_js_1.registerEditorContribution)(lightBulbWidget_js_1.LightBulbWidget.ID, lightBulbWidget_js_1.LightBulbWidget, 4 /* EditorContributionInstantiation.Lazy */);
(0, editorExtensions_js_1.registerEditorAction)(codeActionCommands_js_1.QuickFixAction);
(0, editorExtensions_js_1.registerEditorAction)(codeActionCommands_js_1.RefactorAction);
(0, editorExtensions_js_1.registerEditorAction)(codeActionCommands_js_1.SourceAction);
(0, editorExtensions_js_1.registerEditorAction)(codeActionCommands_js_1.OrganizeImportsAction);
(0, editorExtensions_js_1.registerEditorAction)(codeActionCommands_js_1.AutoFixAction);
(0, editorExtensions_js_1.registerEditorAction)(codeActionCommands_js_1.FixAllAction);
(0, editorExtensions_js_1.registerEditorCommand)(new codeActionCommands_js_1.CodeActionCommand());
platform_js_1.Registry.as(configurationRegistry_js_1.Extensions.Configuration).registerConfiguration({
    ...editorConfigurationSchema_js_1.editorConfigurationBaseNode,
    properties: {
        'editor.codeActionWidget.showHeaders': {
            type: 'boolean',
            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,
            description: nls.localize('showCodeActionHeaders', "Enable/disable showing group headers in the Code Action menu."),
            default: true,
        },
    }
});
platform_js_1.Registry.as(configurationRegistry_js_1.Extensions.Configuration).registerConfiguration({
    ...editorConfigurationSchema_js_1.editorConfigurationBaseNode,
    properties: {
        'editor.codeActionWidget.includeNearbyQuickFixes': {
            type: 'boolean',
            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,
            description: nls.localize('includeNearbyQuickFixes', "Enable/disable showing nearest Quick Fix within a line when not currently on a diagnostic."),
            default: true,
        },
    }
});
platform_js_1.Registry.as(configurationRegistry_js_1.Extensions.Configuration).registerConfiguration({
    ...editorConfigurationSchema_js_1.editorConfigurationBaseNode,
    properties: {
        'editor.codeActions.triggerOnFocusChange': {
            type: 'boolean',
            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,
            markdownDescription: nls.localize('triggerOnFocusChange', 'Enable triggering {0} when {1} is set to {2}. Code Actions must be set to {3} to be triggered for window and focus changes.', '`#editor.codeActionsOnSave#`', '`#files.autoSave#`', '`afterDelay`', '`always`'),
            default: false,
        },
    }
});
//# sourceMappingURL=codeActionContributions.js.map