"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColorPickerWidget = void 0;
require("./colorPicker.css");
const pixelRatio_js_1 = require("../../../../base/browser/pixelRatio.js");
const dom = require("../../../../base/browser/dom.js");
const widget_js_1 = require("../../../../base/browser/ui/widget.js");
const colorPickerBody_js_1 = require("./colorPickerParts/colorPickerBody.js");
const colorPickerHeader_js_1 = require("./colorPickerParts/colorPickerHeader.js");
const $ = dom.$;
class ColorPickerWidget extends widget_js_1.Widget {
    static { this.ID = 'editor.contrib.colorPickerWidget'; }
    constructor(container, model, pixelRatio, themeService, type) {
        super();
        this.model = model;
        this.pixelRatio = pixelRatio;
        this._register(pixelRatio_js_1.PixelRatio.getInstance(dom.getWindow(container)).onDidChange(() => this.layout()));
        this._domNode = $('.colorpicker-widget');
        container.appendChild(this._domNode);
        this.header = this._register(new colorPickerHeader_js_1.ColorPickerHeader(this._domNode, this.model, themeService, type));
        this.body = this._register(new colorPickerBody_js_1.ColorPickerBody(this._domNode, this.model, this.pixelRatio, type));
    }
    getId() {
        return ColorPickerWidget.ID;
    }
    layout() {
        this.body.layout();
    }
    get domNode() {
        return this._domNode;
    }
}
exports.ColorPickerWidget = ColorPickerWidget;
//# sourceMappingURL=colorPickerWidget.js.map