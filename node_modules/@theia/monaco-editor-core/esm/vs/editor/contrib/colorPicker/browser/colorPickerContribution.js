"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const cancellation_js_1 = require("../../../../base/common/cancellation.js");
const errors_js_1 = require("../../../../base/common/errors.js");
const uri_js_1 = require("../../../../base/common/uri.js");
const actions_js_1 = require("../../../../platform/actions/common/actions.js");
const commands_js_1 = require("../../../../platform/commands/common/commands.js");
const editorExtensions_js_1 = require("../../../browser/editorExtensions.js");
const editorFeatures_js_1 = require("../../../common/editorFeatures.js");
const hoverTypes_js_1 = require("../../hover/browser/hoverTypes.js");
const color_js_1 = require("./color.js");
const colorDetector_js_1 = require("./colorDetector.js");
const defaultDocumentColorProvider_js_1 = require("./defaultDocumentColorProvider.js");
const hoverColorPickerContribution_js_1 = require("./hoverColorPicker/hoverColorPickerContribution.js");
const hoverColorPickerParticipant_js_1 = require("./hoverColorPicker/hoverColorPickerParticipant.js");
const standaloneColorPickerActions_js_1 = require("./standaloneColorPicker/standaloneColorPickerActions.js");
const standaloneColorPickerController_js_1 = require("./standaloneColorPicker/standaloneColorPickerController.js");
const range_js_1 = require("../../../common/core/range.js");
(0, editorExtensions_js_1.registerEditorAction)(standaloneColorPickerActions_js_1.HideStandaloneColorPicker);
(0, editorExtensions_js_1.registerEditorAction)(standaloneColorPickerActions_js_1.InsertColorWithStandaloneColorPicker);
(0, actions_js_1.registerAction2)(standaloneColorPickerActions_js_1.ShowOrFocusStandaloneColorPicker);
(0, editorExtensions_js_1.registerEditorContribution)(hoverColorPickerContribution_js_1.HoverColorPickerContribution.ID, hoverColorPickerContribution_js_1.HoverColorPickerContribution, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);
(0, editorExtensions_js_1.registerEditorContribution)(standaloneColorPickerController_js_1.StandaloneColorPickerController.ID, standaloneColorPickerController_js_1.StandaloneColorPickerController, 1 /* EditorContributionInstantiation.AfterFirstRender */);
(0, editorExtensions_js_1.registerEditorContribution)(colorDetector_js_1.ColorDetector.ID, colorDetector_js_1.ColorDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);
(0, editorFeatures_js_1.registerEditorFeature)(defaultDocumentColorProvider_js_1.DefaultDocumentColorProviderFeature);
hoverTypes_js_1.HoverParticipantRegistry.register(hoverColorPickerParticipant_js_1.HoverColorPickerParticipant);
commands_js_1.CommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {
    const [resource] = args;
    if (!(resource instanceof uri_js_1.URI)) {
        throw (0, errors_js_1.illegalArgument)();
    }
    const { model, colorProviderRegistry, defaultColorDecoratorsEnablement } = (0, color_js_1._setupColorCommand)(accessor, resource);
    return (0, color_js_1._findColorData)(new color_js_1.ExtColorDataCollector(), colorProviderRegistry, model, cancellation_js_1.CancellationToken.None, defaultColorDecoratorsEnablement);
});
commands_js_1.CommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {
    const [color, context] = args;
    const { uri, range } = context;
    if (!(uri instanceof uri_js_1.URI) || !Array.isArray(color) || color.length !== 4 || !range_js_1.Range.isIRange(range)) {
        throw (0, errors_js_1.illegalArgument)();
    }
    const { model, colorProviderRegistry, defaultColorDecoratorsEnablement } = (0, color_js_1._setupColorCommand)(accessor, uri);
    const [red, green, blue, alpha] = color;
    return (0, color_js_1._findColorData)(new color_js_1.ColorPresentationsCollector({ range: range, color: { red, green, blue, alpha } }), colorProviderRegistry, model, cancellation_js_1.CancellationToken.None, defaultColorDecoratorsEnablement);
});
//# sourceMappingURL=colorPickerContribution.js.map