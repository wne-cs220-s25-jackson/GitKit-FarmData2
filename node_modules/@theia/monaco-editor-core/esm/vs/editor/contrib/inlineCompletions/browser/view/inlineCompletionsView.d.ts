import { Disposable } from '../../../../../base/common/lifecycle.js';
import { IObservable } from '../../../../../base/common/observable.js';
import { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';
import { ICodeEditor } from '../../../../browser/editorBrowser.js';
import { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';
import { InlineEditsViewAndDiffProducer } from './inlineEdits/inlineEditsViewAndDiffProducer.js';
export declare class InlineCompletionsView extends Disposable {
    private readonly _editor;
    private readonly _model;
    private readonly _instantiationService;
    private readonly _ghostTexts;
    private readonly _stablizedGhostTexts;
    private readonly _ghostTextWidgets;
    private readonly _inlineEdit;
    private readonly _everHadInlineEdit;
    protected readonly _inlineEditWidget: IObservable<InlineEditsViewAndDiffProducer | undefined, unknown>;
    private readonly _editorObs;
    private readonly _fontFamily;
    constructor(_editor: ICodeEditor, _model: IObservable<InlineCompletionsModel | undefined>, _instantiationService: IInstantiationService);
    shouldShowHoverAtViewZone(viewZoneId: string): boolean;
}
