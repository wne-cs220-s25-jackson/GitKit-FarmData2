"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHighlightDecorationOptions = getHighlightDecorationOptions;
exports.getSelectionHighlightDecorationOptions = getSelectionHighlightDecorationOptions;
require("./highlightDecorations.css");
const model_js_1 = require("../../../common/model.js");
const textModel_js_1 = require("../../../common/model/textModel.js");
const languages_js_1 = require("../../../common/languages.js");
const nls = require("../../../../nls.js");
const colorRegistry_js_1 = require("../../../../platform/theme/common/colorRegistry.js");
const themeService_js_1 = require("../../../../platform/theme/common/themeService.js");
const wordHighlightBackground = (0, colorRegistry_js_1.registerColor)('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hcDark: null, hcLight: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);
(0, colorRegistry_js_1.registerColor)('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hcDark: null, hcLight: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);
(0, colorRegistry_js_1.registerColor)('editor.wordHighlightTextBackground', wordHighlightBackground, nls.localize('wordHighlightText', 'Background color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations.'), true);
const wordHighlightBorder = (0, colorRegistry_js_1.registerColor)('editor.wordHighlightBorder', { light: null, dark: null, hcDark: colorRegistry_js_1.activeContrastBorder, hcLight: colorRegistry_js_1.activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));
(0, colorRegistry_js_1.registerColor)('editor.wordHighlightStrongBorder', { light: null, dark: null, hcDark: colorRegistry_js_1.activeContrastBorder, hcLight: colorRegistry_js_1.activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));
(0, colorRegistry_js_1.registerColor)('editor.wordHighlightTextBorder', wordHighlightBorder, nls.localize('wordHighlightTextBorder', "Border color of a textual occurrence for a symbol."));
const overviewRulerWordHighlightForeground = (0, colorRegistry_js_1.registerColor)('editorOverviewRuler.wordHighlightForeground', '#A0A0A0CC', nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);
const overviewRulerWordHighlightStrongForeground = (0, colorRegistry_js_1.registerColor)('editorOverviewRuler.wordHighlightStrongForeground', '#C0A0C0CC', nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);
const overviewRulerWordHighlightTextForeground = (0, colorRegistry_js_1.registerColor)('editorOverviewRuler.wordHighlightTextForeground', colorRegistry_js_1.overviewRulerSelectionHighlightForeground, nls.localize('overviewRulerWordHighlightTextForeground', 'Overview ruler marker color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations.'), true);
const _WRITE_OPTIONS = textModel_js_1.ModelDecorationOptions.register({
    description: 'word-highlight-strong',
    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,
    className: 'wordHighlightStrong',
    overviewRuler: {
        color: (0, themeService_js_1.themeColorFromId)(overviewRulerWordHighlightStrongForeground),
        position: model_js_1.OverviewRulerLane.Center
    },
    minimap: {
        color: (0, themeService_js_1.themeColorFromId)(colorRegistry_js_1.minimapSelectionOccurrenceHighlight),
        position: 1 /* MinimapPosition.Inline */
    },
});
const _TEXT_OPTIONS = textModel_js_1.ModelDecorationOptions.register({
    description: 'word-highlight-text',
    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,
    className: 'wordHighlightText',
    overviewRuler: {
        color: (0, themeService_js_1.themeColorFromId)(overviewRulerWordHighlightTextForeground),
        position: model_js_1.OverviewRulerLane.Center
    },
    minimap: {
        color: (0, themeService_js_1.themeColorFromId)(colorRegistry_js_1.minimapSelectionOccurrenceHighlight),
        position: 1 /* MinimapPosition.Inline */
    },
});
const _SELECTION_HIGHLIGHT_OPTIONS = textModel_js_1.ModelDecorationOptions.register({
    description: 'selection-highlight-overview',
    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,
    className: 'selectionHighlight',
    overviewRuler: {
        color: (0, themeService_js_1.themeColorFromId)(colorRegistry_js_1.overviewRulerSelectionHighlightForeground),
        position: model_js_1.OverviewRulerLane.Center
    },
    minimap: {
        color: (0, themeService_js_1.themeColorFromId)(colorRegistry_js_1.minimapSelectionOccurrenceHighlight),
        position: 1 /* MinimapPosition.Inline */
    },
});
const _SELECTION_HIGHLIGHT_OPTIONS_NO_OVERVIEW = textModel_js_1.ModelDecorationOptions.register({
    description: 'selection-highlight',
    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,
    className: 'selectionHighlight',
});
const _REGULAR_OPTIONS = textModel_js_1.ModelDecorationOptions.register({
    description: 'word-highlight',
    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,
    className: 'wordHighlight',
    overviewRuler: {
        color: (0, themeService_js_1.themeColorFromId)(overviewRulerWordHighlightForeground),
        position: model_js_1.OverviewRulerLane.Center
    },
    minimap: {
        color: (0, themeService_js_1.themeColorFromId)(colorRegistry_js_1.minimapSelectionOccurrenceHighlight),
        position: 1 /* MinimapPosition.Inline */
    },
});
function getHighlightDecorationOptions(kind) {
    if (kind === languages_js_1.DocumentHighlightKind.Write) {
        return _WRITE_OPTIONS;
    }
    else if (kind === languages_js_1.DocumentHighlightKind.Text) {
        return _TEXT_OPTIONS;
    }
    else {
        return _REGULAR_OPTIONS;
    }
}
function getSelectionHighlightDecorationOptions(hasSemanticHighlights) {
    // Show in overviewRuler only if model has no semantic highlighting
    return (hasSemanticHighlights ? _SELECTION_HIGHLIGHT_OPTIONS_NO_OVERVIEW : _SELECTION_HIGHLIGHT_OPTIONS);
}
(0, themeService_js_1.registerThemingParticipant)((theme, collector) => {
    const selectionHighlight = theme.getColor(colorRegistry_js_1.editorSelectionHighlight);
    if (selectionHighlight) {
        collector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);
    }
});
//# sourceMappingURL=highlightDecorations.js.map