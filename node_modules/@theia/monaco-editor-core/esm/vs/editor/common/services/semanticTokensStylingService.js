"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SemanticTokensStylingService = void 0;
const lifecycle_js_1 = require("../../../base/common/lifecycle.js");
const language_js_1 = require("../languages/language.js");
const themeService_js_1 = require("../../../platform/theme/common/themeService.js");
const log_js_1 = require("../../../platform/log/common/log.js");
const semanticTokensProviderStyling_js_1 = require("./semanticTokensProviderStyling.js");
const semanticTokensStyling_js_1 = require("./semanticTokensStyling.js");
const extensions_js_1 = require("../../../platform/instantiation/common/extensions.js");
let SemanticTokensStylingService = class SemanticTokensStylingService extends lifecycle_js_1.Disposable {
    constructor(_themeService, _logService, _languageService) {
        super();
        this._themeService = _themeService;
        this._logService = _logService;
        this._languageService = _languageService;
        this._caches = new WeakMap();
        this._register(this._themeService.onDidColorThemeChange(() => {
            this._caches = new WeakMap();
        }));
    }
    getStyling(provider) {
        if (!this._caches.has(provider)) {
            this._caches.set(provider, new semanticTokensProviderStyling_js_1.SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));
        }
        return this._caches.get(provider);
    }
};
exports.SemanticTokensStylingService = SemanticTokensStylingService;
exports.SemanticTokensStylingService = SemanticTokensStylingService = __decorate([
    __param(0, themeService_js_1.IThemeService),
    __param(1, log_js_1.ILogService),
    __param(2, language_js_1.ILanguageService)
], SemanticTokensStylingService);
(0, extensions_js_1.registerSingleton)(semanticTokensStyling_js_1.ISemanticTokensStylingService, SemanticTokensStylingService, 1 /* InstantiationType.Delayed */);
//# sourceMappingURL=semanticTokensStylingService.js.map